// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TextUserService is an autogenerated mock type for the TextUserService type
type TextUserService struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: name, email, password
func (_m *TextUserService) CreateUser(name string, email string, password string) {
	_m.Called(name, email, password)
}

// DeleteUser provides a mock function with given fields: user_id
func (_m *TextUserService) DeleteUser(user_id int) {
	_m.Called(user_id)
}

// GetAllUsers provides a mock function with given fields:
func (_m *TextUserService) GetAllUsers() []string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAllUsers")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// UpdateUser provides a mock function with given fields: user_id, name, email, password
func (_m *TextUserService) UpdateUser(user_id int, name string, email string, password string) {
	_m.Called(user_id, name, email, password)
}

// NewTextUserService creates a new instance of TextUserService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTextUserService(t interface {
	mock.TestingT
	Cleanup(func())
}) *TextUserService {
	mock := &TextUserService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

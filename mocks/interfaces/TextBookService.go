// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TextBookService is an autogenerated mock type for the TextBookService type
type TextBookService struct {
	mock.Mock
}

// CreateBook provides a mock function with given fields: title, author, publish_year, isbn
func (_m *TextBookService) CreateBook(title string, author string, publish_year string, isbn string) {
	_m.Called(title, author, publish_year, isbn)
}

// DeleteBook provides a mock function with given fields: book_id
func (_m *TextBookService) DeleteBook(book_id int) {
	_m.Called(book_id)
}

// GetAllBooks provides a mock function with given fields:
func (_m *TextBookService) GetAllBooks() []string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAllBooks")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// UpdateBook provides a mock function with given fields: book_id, title, author, publish_year, isbn
func (_m *TextBookService) UpdateBook(book_id int, title string, author string, publish_year string, isbn string) {
	_m.Called(book_id, title, author, publish_year, isbn)
}

// NewTextBookService creates a new instance of TextBookService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTextBookService(t interface {
	mock.TestingT
	Cleanup(func())
}) *TextBookService {
	mock := &TextBookService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

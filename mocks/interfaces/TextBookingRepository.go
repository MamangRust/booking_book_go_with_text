// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TextBookingRepository is an autogenerated mock type for the TextBookingRepository type
type TextBookingRepository struct {
	mock.Mock
}

// CreateBookingWithDetails provides a mock function with given fields: tglPinjam, userID, tglKembali, tglPengembalian, status, totalDenda
func (_m *TextBookingRepository) CreateBookingWithDetails(tglPinjam string, userID string, tglKembali string, tglPengembalian string, status string, totalDenda string) {
	_m.Called(tglPinjam, userID, tglKembali, tglPengembalian, status, totalDenda)
}

// DeleteBooking provides a mock function with given fields: bookingID
func (_m *TextBookingRepository) DeleteBooking(bookingID int) {
	_m.Called(bookingID)
}

// ReadAllBookings provides a mock function with given fields:
func (_m *TextBookingRepository) ReadAllBookings() []string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for ReadAllBookings")
	}

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// UpdateBookingWithDetails provides a mock function with given fields: bookingID, tglPinjam, userID, tglKembali, tglPengembalian, status, totalDenda
func (_m *TextBookingRepository) UpdateBookingWithDetails(bookingID int, tglPinjam string, userID string, tglKembali string, tglPengembalian string, status string, totalDenda string) {
	_m.Called(bookingID, tglPinjam, userID, tglKembali, tglPengembalian, status, totalDenda)
}

// NewTextBookingRepository creates a new instance of TextBookingRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTextBookingRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *TextBookingRepository {
	mock := &TextBookingRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
